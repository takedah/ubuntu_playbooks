- name: install packages for building neovim
  apt:
    name: "{{item}}"
    state: present
  with_items:
    - build-essential
    - cmake
    - libuv1-dev
    - gettext

- name: install packages for neovim plugin (--force-overwrite)
  apt:
    name: "{{item}}"
    state: present
    dpkg_options: "force-overwrite"
  with_items:
    - bat
    - ripgrep

- name: install pynvim
  become: yes
  become_user: "{{user_name}}"
  shell: source $HOME/.bash_profile; python -m pip install pynvim

- name: install nodejs
  become: yes
  become_user: "{{ user_name }}"
  shell: source $HOME/.bash_profile; npm install -g neovim

- name: install ruby
  become: yes
  become_user: "{{ user_name }}"
  shell: source $HOME/.bash_profile; gem install neovim

- name: check neovim version
  become: yes
  become_user: "{{user_name}}"
  shell: . ~/.bash_profile; nvim -v | grep -q "NVIM {{neovim_version}}"
  register: is_neovim_installed
  failed_when: is_neovim_installed.rc not in [0, 1]

- name: create neovim source directory
  file:
    path: /usr/local/src/neovim.git
    state: directory
    owner: "{{user_name}}"
    group: "{{user_name}}"
    mode: 0755
  when: is_neovim_installed.rc == 1

- name: download neovim source file
  git:
    repo: "{{neovim_url}}"
    dest: /usr/local/src/neovim.git
    accept_hostkey: yes
    force: yes
    version: "{{neovim_version}}"
  become: no
  when: is_neovim_installed.rc == 1

- name: install neovim
  command: >
    {{item}}
    chdir=/usr/local/src/neovim.git
    creates=/usr/local/bin/neovim
  with_items:
    - make CMAKE_BUILD_TYPE=Release
    - make install
  when: is_neovim_installed.rc == 1

- name: download vim-plug
  become: yes
  become_user: "{{user_name}}"
  command: curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs {{vim_plug_url}}
